.globl	lamb_main
lamb_main:
	/* PUSH [GRAB, ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_0,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [GRAB, GRAB, ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_1,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [GRAB, PUSH [GRAB, PUSH [PUSH [ACCESS 0], ACCESS 0], ACCESS 1], GRAB, PUSH [PUSH [ACCESS 0], ACCESS 0], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_2,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [GRAB, GRAB, ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_8,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [GRAB, GRAB, ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_9,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [GRAB, GRAB, GRAB, PUSH [ACCESS 0], PUSH [ACCESS 1], ACCESS 2] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_10,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [GRAB, PUSH [ACCESS 2], PUSH [PUSH [ACCESS 3], ACCESS 5], ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_13,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [GRAB, GRAB, GRAB, PUSH [ACCESS 9], PUSH [PUSH [ACCESS 0], ACCESS 8], PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 3], ACCESS 1], ACCESS 0], ACCESS 2] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_17,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [GRAB, GRAB, GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], ACCESS 2], PUSH [ACCESS 1], ACCESS 3] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_24,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [GRAB, GRAB, ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_29,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [GRAB, GRAB, GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], ACCESS 2], PUSH [ACCESS 3], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_30,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 2] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [GRAB, GRAB, PUSH [PUSH [PUSH [PUSH [PUSH [ACCESS 0], ACCESS 6], ACCESS 1], PUSH [PUSH [PUSH [PUSH [ACCESS 0], ACCESS 6], ACCESS 6], ACCESS 1], ACCESS 5], PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], PUSH [PUSH [PUSH [ACCESS 0], ACCESS 6], ACCESS 7], ACCESS 8], PUSH [GRAB, GRAB, ACCESS 0], PUSH [PUSH [ACCESS 0], ACCESS 7], ACCESS 8], ACCESS 9] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_181,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [PUSH [PUSH [GRAB, GRAB, ACCESS 0], ACCESS 0], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_1126,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 2 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$3,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_0:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_1:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_2:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [GRAB, PUSH [PUSH [ACCESS 0], ACCESS 0], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_2_3,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_2_6,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_2_3:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_2_3_4,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_2_3_4:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_2_3_4_5,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_2_3_4_5:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_2_6:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_2_6_7,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_2_6_7:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_8:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_9:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_10:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_10_11,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_10_12,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 2 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$3,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_10_11:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_10_12:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_13:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [ACCESS 2] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_13_14,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [PUSH [ACCESS 3], ACCESS 5] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_13_15,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_13_14:
	/* ACCESS 2 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$3,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_13_15:
	/* PUSH [ACCESS 3] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_13_15_16,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 5 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$6,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_13_15_16:
	/* ACCESS 3 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$4,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_17:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [ACCESS 9] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_17_18,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [PUSH [ACCESS 0], ACCESS 8] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_17_19,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 3], ACCESS 1], ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_17_21,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 2 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$3,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_17_18:
	/* ACCESS 9 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$10,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_17_19:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_17_19_20,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 8 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$9,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_17_19_20:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_17_21:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 3], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_17_21_22,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_17_21_22:
	/* PUSH [ACCESS 3] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_17_21_22_23,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_17_21_22_23:
	/* ACCESS 3 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$4,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_24:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], ACCESS 2] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_24_25,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_24_28,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 3 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$4,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_24_25:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_24_25_26,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_24_25_27,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 2 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$3,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_24_25_26:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_24_25_27:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_24_28:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_29:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_30:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], ACCESS 2] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_30_31,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 3] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_30_34,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_30_31:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_30_31_32,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_30_31_33,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 2 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$3,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_30_31_32:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_30_31_33:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_30_34:
	/* ACCESS 3 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$4,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35:
	/* PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 2 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$3,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_38,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_39,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_38:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_39:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_41,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_42,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_41:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_42:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_44,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_45,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_44:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_45:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_47,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_48,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_47:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_48:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_50,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_51,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_50:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_51:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_53,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_54,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_53:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_54:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_56,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_57,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_56:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_57:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_59,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_60,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_59:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_60:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_62,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_63,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_62:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_63:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_65,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_66,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_65:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_66:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_68,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_69,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_68:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_69:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_71,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_72,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_71:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_72:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_74,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_75,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_74:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_75:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_77,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_78,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_77:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_78:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_80,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_81,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_80:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_81:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_83,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_84,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_83:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_84:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_86,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_87,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_86:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_87:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_89,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_90,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_89:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_90:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_92,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_93,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_92:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_93:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_95,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_96,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_95:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_96:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_98,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_99,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_98:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_99:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_101,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_102,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_101:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_102:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_104,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_105,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_104:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_105:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_107,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_108,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_107:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_108:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_110,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_111,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_110:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_111:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_113,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_114,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_113:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_114:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_116,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_117,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_116:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_117:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_119,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_120,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_119:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_120:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_122,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_123,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_122:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_123:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_125,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_126,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_125:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_126:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_128,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_129,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_128:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_129:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_131,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_132,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_131:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_132:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_134,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_135,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_134:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_135:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_137,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_138,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_137:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_138:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_140,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_141,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_140:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_141:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_143,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_144,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_143:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_144:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_146,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_147,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_146:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_147:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_149,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_150,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_149:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_150:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_152,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_153,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_152:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_153:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_155,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_156,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_155:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_156:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_158,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_159,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_158:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_159:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_161,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_162,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_161:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_162:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_164,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_165,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_164:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_165:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_167,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_168,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_169,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_167:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_168:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_169:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_169_170,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_169_171,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_169_172,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_169_170:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_169_171:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_169_172:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_169_172_173,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_169_172_174,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_169_172_175,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_169_172_173:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_169_172_174:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_169_172_175:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_169_172_175_176,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_169_172_175_177,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_169_172_175_178,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_169_172_175_176:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_169_172_175_177:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_169_172_175_178:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_169_172_175_178_179,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_169_172_175_178_180,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_169_172_175_178_179:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_35_36_37_40_43_46_49_52_55_58_61_64_67_70_73_76_79_82_85_88_91_94_97_100_103_106_109_112_115_118_121_124_127_130_133_136_139_142_145_148_151_154_157_160_163_166_169_172_175_178_180:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_181:
	/* PUSH [GRAB, GRAB, PUSH [PUSH [PUSH [PUSH [PUSH [ACCESS 0], ACCESS 6], ACCESS 1], PUSH [PUSH [PUSH [PUSH [ACCESS 0], ACCESS 6], ACCESS 6], ACCESS 1], ACCESS 5], PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], PUSH [PUSH [PUSH [ACCESS 0], ACCESS 6], ACCESS 7], ACCESS 8], PUSH [GRAB, GRAB, ACCESS 0], PUSH [PUSH [ACCESS 0], ACCESS 7], ACCESS 8] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_181_182,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 9 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$10,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_181_182:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [PUSH [PUSH [PUSH [ACCESS 0], ACCESS 6], ACCESS 1], PUSH [PUSH [PUSH [PUSH [ACCESS 0], ACCESS 6], ACCESS 6], ACCESS 1], ACCESS 5], PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], PUSH [PUSH [PUSH [ACCESS 0], ACCESS 6], ACCESS 7], ACCESS 8] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_181_182_183,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [GRAB, GRAB, ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_181_182_199,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [PUSH [ACCESS 0], ACCESS 7] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_181_182_200,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 8 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$9,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_181_182_183:
	/* PUSH [PUSH [PUSH [PUSH [ACCESS 0], ACCESS 6], ACCESS 1], PUSH [PUSH [PUSH [PUSH [ACCESS 0], ACCESS 6], ACCESS 6], ACCESS 1], ACCESS 5] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_181_182_183_184,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_181_182_183_192,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [PUSH [PUSH [ACCESS 0], ACCESS 6], ACCESS 7] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_181_182_183_196,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 8 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$9,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_181_182_183_184:
	/* PUSH [PUSH [PUSH [ACCESS 0], ACCESS 6], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_181_182_183_184_185,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [PUSH [PUSH [PUSH [ACCESS 0], ACCESS 6], ACCESS 6], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_181_182_183_184_188,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 5 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$6,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_181_182_183_184_185:
	/* PUSH [PUSH [ACCESS 0], ACCESS 6] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_181_182_183_184_185_186,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_181_182_183_184_185_186:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_181_182_183_184_185_186_187,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 6 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$7,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_181_182_183_184_185_186_187:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_181_182_183_184_188:
	/* PUSH [PUSH [PUSH [ACCESS 0], ACCESS 6], ACCESS 6] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_181_182_183_184_188_189,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_181_182_183_184_188_189:
	/* PUSH [PUSH [ACCESS 0], ACCESS 6] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_181_182_183_184_188_189_190,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 6 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$7,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_181_182_183_184_188_189_190:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_181_182_183_184_188_189_190_191,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 6 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$7,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_181_182_183_184_188_189_190_191:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_181_182_183_192:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_181_182_183_192_193,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_181_182_183_192_193:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_181_182_183_192_193_194,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_181_182_183_192_193_195,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_181_182_183_192_193_194:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_181_182_183_192_193_195:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_181_182_183_196:
	/* PUSH [PUSH [ACCESS 0], ACCESS 6] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_181_182_183_196_197,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 7 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$8,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_181_182_183_196_197:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_181_182_183_196_197_198,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 6 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$7,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_181_182_183_196_197_198:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_181_182_199:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_181_182_200:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_181_182_200_201,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 7 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$8,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_181_182_200_201:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202:
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 2 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$3,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203:
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [PUSH [PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 0], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_987,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 2 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$3,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204:
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 2 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$3,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205:
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [PUSH [PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 0], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_845,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 2 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$3,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206:
	/* PUSH [PUSH [PUSH [PUSH [PUSH [PUSH [PUSH [PUSH [PUSH [ACCESS 3], PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 2], PUSH [PUSH [PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 0], ACCESS 1], ACCESS 2], PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 2], PUSH [PUSH [PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 0], ACCESS 1], ACCESS 2], PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 2], PUSH [PUSH [PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 0], ACCESS 1], ACCESS 2], PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 2], PUSH [PUSH [PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 0], ACCESS 1], ACCESS 2] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 2 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$3,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207:
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [PUSH [PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 0], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_700,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 2 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$3,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208:
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 2 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$3,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209:
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [PUSH [PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 0], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_552,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 2 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$3,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210:
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 2 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$3,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211:
	/* PUSH [PUSH [PUSH [PUSH [ACCESS 3], PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 2], PUSH [PUSH [PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 0], ACCESS 1], ACCESS 2], PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 2] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [PUSH [PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 0], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_401,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 2 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$3,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212:
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 2 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$3,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213:
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [PUSH [PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 0], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 2 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$3,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214:
	/* PUSH [ACCESS 3] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_215,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 2 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$3,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_215:
	/* ACCESS 3 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$4,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_218,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_219,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_218:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_219:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_221,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_222,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_221:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_222:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_224,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_225,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_224:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_225:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_227,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_228,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_227:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_228:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_230,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_231,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_230:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_231:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_233,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_234,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_235,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_233:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_234:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_235:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_235_236,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_235_237,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_235_238,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_235_236:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_235_237:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_235_238:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_235_238_239,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_235_238_240,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_235_238_241,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_235_238_239:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_235_238_240:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_235_238_241:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_235_238_241_242,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_235_238_241_243,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_235_238_241_244,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_235_238_241_242:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_235_238_241_243:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_235_238_241_244:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_235_238_241_244_245,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_235_238_241_244_246,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_235_238_241_244_245:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_214_216_217_220_223_226_229_232_235_238_241_244_246:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247:
	/* PUSH [PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248:
	/* PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_251,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_252,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_251:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_252:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_254,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_255,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_256,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_254:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_255:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_256:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_256_257,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_256_258,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_256_259,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_256_257:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_256_258:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_256_259:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_256_259_260,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_256_259_261,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_256_259_262,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_256_259_260:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_256_259_261:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_256_259_262:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_256_259_262_263,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_256_259_262_264,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_256_259_262_265,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_256_259_262_263:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_256_259_262_264:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_256_259_262_265:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_256_259_262_265_266,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_256_259_262_265_267,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_256_259_262_265_266:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_213_247_248_249_250_253_256_259_262_265_267:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_270,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_271,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_270:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_271:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_273,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_274,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_273:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_274:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_276,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_277,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_276:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_277:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_279,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_280,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_279:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_280:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_282,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_283,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_282:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_283:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_285,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_286,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_285:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_286:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_288,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_289,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_288:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_289:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_291,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_292,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_291:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_292:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_294,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_295,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_294:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_295:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_297,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_298,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_297:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_298:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_300,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_301,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_300:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_301:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_303,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_304,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_303:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_304:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_306,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_307,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_306:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_307:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_309,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_310,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_309:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_310:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_312,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_313,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_312:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_313:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_315,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_316,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_315:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_316:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_318,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_319,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_318:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_319:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_321,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_322,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_321:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_322:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_324,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_325,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_324:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_325:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_327,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_328,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_327:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_328:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_330,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_331,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_330:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_331:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_333,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_334,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_333:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_334:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_336,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_337,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_336:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_337:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_339,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_340,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_339:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_340:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_342,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_343,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_342:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_343:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_345,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_346,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_345:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_346:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_348,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_349,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_348:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_349:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_351,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_352,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_351:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_352:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_354,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_355,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_354:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_355:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_357,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_358,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_357:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_358:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_360,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_361,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_360:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_361:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_363,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_364,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_363:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_364:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_366,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_367,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_366:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_367:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_369,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_370,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_369:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_370:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_372,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_373,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_372:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_373:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_375,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_376,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_375:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_376:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_378,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_379,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_378:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_379:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_381,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_382,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_381:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_382:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_384,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_385,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_384:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_385:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_387,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_388,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_389,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_387:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_388:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_389:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_389_390,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_389_391,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_389_392,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_389_390:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_389_391:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_389_392:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_389_392_393,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_389_392_394,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_389_392_395,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_389_392_393:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_389_392_394:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_389_392_395:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_389_392_395_396,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_389_392_395_397,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_389_392_395_398,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_389_392_395_396:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_389_392_395_397:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_389_392_395_398:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_389_392_395_398_399,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_389_392_395_398_400,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_389_392_395_398_399:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_212_268_269_272_275_278_281_284_287_290_293_296_299_302_305_308_311_314_317_320_323_326_329_332_335_338_341_344_347_350_353_356_359_362_365_368_371_374_377_380_383_386_389_392_395_398_400:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_401:
	/* PUSH [PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_401_402,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_401_402:
	/* PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_405,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_406,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_407,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_405:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_406:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_407:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_407_408,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_407_409,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_407_410,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_407_408:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_407_409:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_407_410:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_407_410_411,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_407_410_412,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_407_410_413,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_407_410_411:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_407_410_412:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_407_410_413:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_407_410_413_414,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_407_410_413_415,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_407_410_413_416,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_407_410_413_414:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_407_410_413_415:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_407_410_413_416:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_407_410_413_416_417,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_407_410_413_416_418,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_407_410_413_416_417:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_211_401_402_403_404_407_410_413_416_418:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_421,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_422,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_421:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_422:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_424,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_425,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_424:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_425:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_427,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_428,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_427:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_428:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_430,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_431,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_430:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_431:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_433,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_434,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_433:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_434:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_436,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_437,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_436:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_437:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_439,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_440,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_439:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_440:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_442,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_443,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_442:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_443:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_445,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_446,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_445:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_446:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_448,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_449,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_448:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_449:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_451,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_452,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_451:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_452:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_454,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_455,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_454:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_455:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_457,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_458,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_457:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_458:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_460,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_461,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_460:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_461:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_463,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_464,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_463:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_464:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_466,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_467,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_466:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_467:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_469,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_470,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_469:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_470:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_472,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_473,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_472:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_473:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_475,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_476,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_475:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_476:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_478,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_479,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_478:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_479:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_481,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_482,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_481:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_482:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_484,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_485,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_484:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_485:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_487,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_488,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_487:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_488:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_490,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_491,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_490:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_491:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_493,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_494,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_493:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_494:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_496,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_497,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_496:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_497:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_499,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_500,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_499:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_500:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_502,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_503,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_502:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_503:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_505,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_506,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_505:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_506:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_508,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_509,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_508:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_509:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_511,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_512,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_511:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_512:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_514,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_515,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_514:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_515:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_517,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_518,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_517:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_518:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_520,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_521,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_520:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_521:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_523,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_524,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_523:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_524:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_526,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_527,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_526:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_527:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_529,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_530,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_529:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_530:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_532,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_533,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_532:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_533:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_535,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_536,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_535:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_536:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_538,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_539,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_540,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_538:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_539:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_540:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_540_541,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_540_542,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_540_543,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_540_541:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_540_542:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_540_543:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_540_543_544,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_540_543_545,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_540_543_546,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_540_543_544:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_540_543_545:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_540_543_546:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_540_543_546_547,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_540_543_546_548,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_540_543_546_549,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_540_543_546_547:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_540_543_546_548:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_540_543_546_549:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_540_543_546_549_550,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_540_543_546_549_551,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_540_543_546_549_550:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_210_419_420_423_426_429_432_435_438_441_444_447_450_453_456_459_462_465_468_471_474_477_480_483_486_489_492_495_498_501_504_507_510_513_516_519_522_525_528_531_534_537_540_543_546_549_551:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_552:
	/* PUSH [PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_552_553,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_552_553:
	/* PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_552_553_554,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_552_553_554:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_552_553_554_555,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_552_553_554_555:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_552_553_554_555_556,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_552_553_554_555_557,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_552_553_554_555_558,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_552_553_554_555_556:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_552_553_554_555_557:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_552_553_554_555_558:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_552_553_554_555_558_559,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_552_553_554_555_558_560,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_552_553_554_555_558_561,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_552_553_554_555_558_559:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_552_553_554_555_558_560:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_552_553_554_555_558_561:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_552_553_554_555_558_561_562,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_552_553_554_555_558_561_563,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_552_553_554_555_558_561_564,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_552_553_554_555_558_561_562:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_552_553_554_555_558_561_563:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_552_553_554_555_558_561_564:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_552_553_554_555_558_561_564_565,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_209_552_553_554_555_558_561_564_566,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_552_553_554_555_558_561_564_565:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_209_552_553_554_555_558_561_564_566:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_569,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_570,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_569:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_570:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_572,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_573,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_572:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_573:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_575,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_576,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_575:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_576:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_578,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_579,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_578:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_579:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_581,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_582,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_581:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_582:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_584,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_585,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_584:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_585:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_587,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_588,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_587:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_588:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_590,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_591,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_590:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_591:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_593,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_594,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_593:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_594:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_596,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_597,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_596:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_597:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_599,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_600,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_599:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_600:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_602,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_603,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_602:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_603:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_605,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_606,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_605:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_606:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_608,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_609,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_608:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_609:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_611,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_612,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_611:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_612:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_614,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_615,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_614:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_615:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_617,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_618,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_617:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_618:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_620,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_621,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_620:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_621:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_623,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_624,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_623:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_624:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_626,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_627,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_626:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_627:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_629,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_630,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_629:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_630:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_632,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_633,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_632:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_633:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_635,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_636,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_635:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_636:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_638,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_639,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_638:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_639:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_641,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_642,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_641:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_642:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_644,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_645,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_644:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_645:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_647,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_648,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_647:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_648:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_650,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_651,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_650:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_651:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_653,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_654,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_653:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_654:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_656,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_657,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_656:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_657:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_659,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_660,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_659:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_660:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_662,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_663,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_662:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_663:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_665,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_666,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_665:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_666:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_668,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_669,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_668:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_669:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_671,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_672,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_671:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_672:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_674,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_675,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_674:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_675:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_677,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_678,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_677:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_678:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_680,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_681,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_680:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_681:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_683,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_684,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_683:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_684:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_686,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_687,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_688,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_686:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_687:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_688:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_688_689,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_688_690,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_688_691,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_688_689:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_688_690:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_688_691:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_688_691_692,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_688_691_693,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_688_691_694,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_688_691_692:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_688_691_693:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_688_691_694:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_688_691_694_695,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_688_691_694_696,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_688_691_694_697,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_688_691_694_695:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_688_691_694_696:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_688_691_694_697:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_688_691_694_697_698,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_688_691_694_697_699,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_688_691_694_697_698:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_208_567_568_571_574_577_580_583_586_589_592_595_598_601_604_607_610_613_616_619_622_625_628_631_634_637_640_643_646_649_652_655_658_661_664_667_670_673_676_679_682_685_688_691_694_697_699:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_700:
	/* PUSH [PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_700_701,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_700_701:
	/* PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_700_701_702,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_700_701_702:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_700_701_702_703,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_700_701_702_703:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_700_701_702_703_704,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_700_701_702_703_705,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_700_701_702_703_706,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_700_701_702_703_704:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_700_701_702_703_705:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_700_701_702_703_706:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_700_701_702_703_706_707,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_700_701_702_703_706_708,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_700_701_702_703_706_709,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_700_701_702_703_706_707:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_700_701_702_703_706_708:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_700_701_702_703_706_709:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_700_701_702_703_706_709_710,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_207_700_701_702_703_706_709_711,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_700_701_702_703_706_709_710:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_207_700_701_702_703_706_709_711:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_714,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_715,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_714:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_715:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_717,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_718,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_717:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_718:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_720,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_721,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_720:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_721:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_723,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_724,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_723:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_724:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_726,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_727,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_726:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_727:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_729,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_730,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_729:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_730:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_732,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_733,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_732:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_733:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_735,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_736,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_735:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_736:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_738,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_739,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_738:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_739:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_741,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_742,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_741:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_742:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_744,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_745,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_744:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_745:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_747,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_748,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_747:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_748:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_750,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_751,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_750:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_751:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_753,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_754,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_753:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_754:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_756,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_757,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_756:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_757:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_759,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_760,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_759:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_760:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_762,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_763,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_762:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_763:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_765,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_766,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_765:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_766:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_768,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_769,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_768:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_769:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_771,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_772,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_771:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_772:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_774,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_775,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_774:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_775:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_777,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_778,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_777:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_778:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_780,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_781,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_780:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_781:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_783,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_784,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_783:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_784:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_786,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_787,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_786:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_787:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_789,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_790,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_789:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_790:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_792,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_793,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_792:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_793:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_795,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_796,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_795:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_796:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_798,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_799,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_798:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_799:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_801,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_802,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_801:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_802:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_804,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_805,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_804:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_805:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_807,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_808,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_807:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_808:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_810,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_811,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_810:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_811:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_813,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_814,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_813:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_814:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_816,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_817,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_816:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_817:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_819,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_820,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_819:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_820:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_822,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_823,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_822:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_823:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_825,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_826,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_825:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_826:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_828,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_829,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_828:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_829:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_831,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_832,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_833,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_831:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_832:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_833:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_833_834,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_833_835,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_833_836,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_833_834:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_833_835:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_833_836:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_833_836_837,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_833_836_838,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_833_836_839,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_833_836_837:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_833_836_838:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_833_836_839:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_833_836_839_840,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_833_836_839_841,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_833_836_839_842,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_833_836_839_840:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_833_836_839_841:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_833_836_839_842:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_833_836_839_842_843,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_833_836_839_842_844,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_833_836_839_842_843:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_206_712_713_716_719_722_725_728_731_734_737_740_743_746_749_752_755_758_761_764_767_770_773_776_779_782_785_788_791_794_797_800_803_806_809_812_815_818_821_824_827_830_833_836_839_842_844:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_845:
	/* PUSH [PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_845_846,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_845_846:
	/* PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_845_846_847,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_845_846_847:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_845_846_847_848,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_845_846_847_848:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_845_846_847_848_849,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_845_846_847_848_850,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_845_846_847_848_851,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_845_846_847_848_849:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_845_846_847_848_850:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_845_846_847_848_851:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_845_846_847_848_851_852,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_205_845_846_847_848_851_853,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_845_846_847_848_851_852:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_205_845_846_847_848_851_853:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_856,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_857,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_856:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_857:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_859,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_860,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_859:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_860:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_862,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_863,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_862:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_863:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_865,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_866,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_865:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_866:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_868,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_869,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_868:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_869:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_871,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_872,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_871:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_872:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_874,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_875,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_874:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_875:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_877,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_878,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_877:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_878:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_880,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_881,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_880:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_881:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_883,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_884,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_883:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_884:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_886,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_887,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_886:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_887:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_889,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_890,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_889:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_890:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_892,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_893,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_892:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_893:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_895,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_896,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_895:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_896:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_898,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_899,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_898:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_899:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_901,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_902,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_901:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_902:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_904,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_905,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_904:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_905:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_907,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_908,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_907:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_908:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_910,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_911,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_910:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_911:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_913,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_914,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_913:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_914:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_916,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_917,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_916:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_917:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_919,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_920,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_919:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_920:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_922,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_923,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_922:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_923:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_925,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_926,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_925:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_926:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_928,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_929,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_928:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_929:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_931,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_932,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_931:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_932:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_934,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_935,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_934:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_935:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_937,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_938,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_937:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_938:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_940,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_941,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_940:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_941:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_943,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_944,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_943:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_944:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_946,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_947,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_946:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_947:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_949,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_950,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_949:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_950:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_952,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_953,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_952:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_953:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_955,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_956,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_955:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_956:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_958,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_959,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_958:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_959:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_961,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_962,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_961:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_962:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_964,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_965,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_964:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_965:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_967,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_968,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_967:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_968:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_970,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_971,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_970:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_971:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_973,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_974,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_975,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_973:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_974:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_975:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_975_976,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_975_977,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_975_978,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_975_976:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_975_977:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_975_978:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_975_978_979,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_975_978_980,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_975_978_981,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_975_978_979:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_975_978_980:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_975_978_981:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_975_978_981_982,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_975_978_981_983,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_975_978_981_984,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_975_978_981_982:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_975_978_981_983:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_975_978_981_984:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_975_978_981_984_985,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_975_978_981_984_986,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_975_978_981_984_985:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_204_854_855_858_861_864_867_870_873_876_879_882_885_888_891_894_897_900_903_906_909_912_915_918_921_924_927_930_933_936_939_942_945_948_951_954_957_960_963_966_969_972_975_978_981_984_986:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_987:
	/* PUSH [PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_987_988,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_987_988:
	/* PUSH [GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_987_988_989,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_987_988_989:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_987_988_989_990,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_987_988_989_990:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_987_988_989_990_991,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_203_987_988_989_990_992,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_987_988_989_990_991:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_203_987_988_989_990_992:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_995,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_996,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_995:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_996:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_998,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_999,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_998:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_999:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1001,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1002,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1001:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1002:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1004,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1005,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1004:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1005:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1007,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1008,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1007:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1008:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1010,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1011,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1010:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1011:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1013,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1014,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1013:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1014:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1016,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1017,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1016:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1017:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1019,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1020,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1019:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1020:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1022,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1023,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1022:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1023:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1025,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1026,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1025:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1026:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1028,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1029,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1028:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1029:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1031,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1032,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1031:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1032:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1034,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1035,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1034:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1035:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1037,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1038,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1037:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1038:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1040,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1041,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1040:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1041:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1043,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1044,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1043:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1044:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1046,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1047,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1046:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1047:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1049,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1050,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1049:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1050:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1052,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1053,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1052:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1053:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1055,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1056,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1055:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1056:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1058,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1059,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1058:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1059:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1061,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1062,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1061:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1062:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1064,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1065,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1064:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1065:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1067,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1068,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1067:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1068:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1070,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1071,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1070:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1071:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1073,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1074,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1073:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1074:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1076,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1077,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1076:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1077:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1079,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1080,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1079:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1080:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1082,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1083,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1082:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1083:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1085,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1086,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1085:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1086:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1088,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1089,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1088:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1089:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1091,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1092,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1091:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1092:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1094,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1095,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1094:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1095:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1097,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1098,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1097:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1098:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1100,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1101,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1100:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1101:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1103,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1104,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1103:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1104:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1106,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1107,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1106:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1107:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1109,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1110,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1109:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1110:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1112,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1113,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1114,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1112:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1113:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1114:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1114_1115,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1114_1116,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1114_1117,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1114_1115:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1114_1116:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1114_1117:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1114_1117_1118,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1114_1117_1119,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0], ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1114_1117_1120,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1114_1117_1118:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1114_1117_1119:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1114_1117_1120:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1114_1117_1120_1121,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1114_1117_1120_1122,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* PUSH [PUSH [ACCESS 0], PUSH [ACCESS 1], GRAB, GRAB, ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1114_1117_1120_1123,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1114_1117_1120_1121:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1114_1117_1120_1122:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1114_1117_1120_1123:
	/* PUSH [ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1114_1117_1120_1123_1124,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* PUSH [ACCESS 1] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1114_1117_1120_1123_1125,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1114_1117_1120_1123_1124:
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_202_993_994_997_1000_1003_1006_1009_1012_1015_1018_1021_1024_1027_1030_1033_1036_1039_1042_1045_1048_1051_1054_1057_1060_1063_1066_1069_1072_1075_1078_1081_1084_1087_1090_1093_1096_1099_1102_1105_1108_1111_1114_1117_1120_1123_1125:
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_1126:
	/* PUSH [PUSH [GRAB, GRAB, ACCESS 0], ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_1126_1127,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 1 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$2,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_1126_1127:
	/* PUSH [GRAB, GRAB, ACCESS 0] */
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	addq	%r10,	%rcx
	movq	$lamb_main_1126_1127_1128,	(%rcx)
	movq	%rdi,	8(%rcx)
	movq	%rsi,	16(%rcx)
	leaq	0(%rdx, %rdx, 2),	%r10
	salq	$3,	%r10
	subq	%r10,	%rcx
	incq	%rdx
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
lamb_main_1126_1127_1128:
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* GRAB */
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	movq	%rdi,	%r10
	incq	%r10
	movq	$24,	%r11
	movq	$4,	%r12
	pushq	%r12
	movq	%rsp,	%r12
	pushq	%r12
	movq	%r11,	%r9
	movq	%r10,	%r8
	call	gc_alloc
	popq	%r12
	popq	%r12
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	pushq	%rax
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	leaq	0(%rdi, %rdi, 2),	%rdx
	salq	$3,	%rdx
	movq	%rax,	%rdi
	call	memcpy
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	popq	%rsi
	decq	%rdx
	leaq	0(%rdx, %rdx, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rcx
	movq	(%rcx),	%r10
	movq	8(%rcx),	%r11
	movq	16(%rcx),	%r12
	subq	%r13,	%rcx
	leaq	0(%rdi, %rdi, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	%r10,	(%rsi)
	movq	%r11,	8(%rsi)
	movq	%r12,	16(%rsi)
	subq	%r13,	%rsi
	incq	%rdi
	/* ACCESS 0 */
	pushq	%rsi
	pushq	%rdi
	movq	%rdi,	%r13
	subq	$1,	%r13
	leaq	0(%r13, %r13, 2),	%r13
	salq	$3,	%r13
	addq	%r13,	%rsi
	movq	(%rsi),	%r10
	movq	8(%rsi),	%r11
	movq	16(%rsi),	%r12
	subq	%r13,	%rsi
	movq	%r11,	%rdi
	movq	%r12,	%rsi
	popq	%r13
	popq	%r14
	jmp	*%r10
